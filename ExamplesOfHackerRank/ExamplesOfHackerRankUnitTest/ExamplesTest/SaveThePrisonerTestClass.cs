using System;
using ExamplesOfHackerRank.Examples;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace ExamplesOfHackerRankUnitTest.ExamplesTest
{
    [TestClass]
    public class SaveThePrisonerTestClass
    {
        [TestMethod]
        public void SaveThePrisonerTest_Case1()
        {
            int prisoners = 7;
            int pieceOfCandy = 19;
            int start = 2;

            var actual = new SaveThePrisoner().GetPersonToBeWarned(prisoners, pieceOfCandy, start);

            var expected = 6;

            Assert.AreEqual(expected, actual);
        }

        [TestMethod]
        public void SaveThePrisonerTest_Case2()
        {
            int prisoners = 5;
            int pieceOfCandy = 2;
            int start = 1;

            var actual = new SaveThePrisoner().GetPersonToBeWarned(prisoners, pieceOfCandy, start);

            var expected = 2;

            Assert.AreEqual(expected, actual);
        }

        [TestMethod]
        public void SaveThePrisonerTest_Case3()
        {
            int prisoners = 208526924;
            int pieceOfCandy = 756265725;
            int start = 15081787;

            var actual = new SaveThePrisoner().GetPersonToBeWarned(prisoners, pieceOfCandy, start);

            var expected = 72975907;

            Assert.AreEqual(expected, actual);
        }

        [TestMethod]
        public void SaveThePrisonerTest_Case4() {

            int[,] inputs = { {352926151, 380324688, 94730870},
{94431605, 679262176, 5284458},
//{962975336, 972576181, 39635518},
{464237185, 937820284, 25581679},
{649320641, 742902564, 64754232},
{174512033, 711706897, 68977959},
{107283902, 156676511, 67149447},
{104513201, 298399273, 96292548},
{113378824, 274011418, 98103763},
{934815799, 991959468, 21239603},
{88325121, 435452998, 24617705},
{984873585, 997634055, 10305015},
{344218387, 715364875, 90658180},
{556065259, 615709967, 15641759},
{57109959, 451440582, 4188603},
{353972922, 573651462, 24452050},
{946486979, 973168361, 64788603},
{368127406, 680428368, 10551729},
{884634320, 965112925, 11975723},
{422557970, 744431033, 28932300},
{634954007, 957414623, 34136637},
{190265362, 445253893, 18463292},
{293315518, 479153471, 12068402},
{72410472, 80198999, 984948},
{784893322, 849791807, 36091138},
{846191883, 880790237, 51005375},
{297201660, 812278057, 19837674},
{945087694, 999220046, 46506151},
{786859800, 831171414, 37837093},
{528402029, 859318899, 22455995},
{522640531, 755821672, 28838424},
{864006909, 879474138, 80646748},
{613544440, 943850900, 25819075},
{734228459, 928771704, 26597928},
{542812502, 597832172, 33087776},
{541133561, 748691081, 12634849},
{51187317, 524866691, 1143193},
{885290374, 990676850, 37336838},
{147955933, 450823700, 13841605},
{100046465, 587967212, 32555061},
{233926824, 996957988, 31809378},
{785405778, 835771758, 68918270},
{444389615, 870657324, 72775880},
{702580369, 895325888, 34505319},
{968559651, 974760313, 32673208},
{299437419, 514618345, 25427280},
{901702945, 930227426, 72703089},
{721843209, 736359383, 22528378},
{833018320, 883439261, 80659924},
{267346244, 307857609, 46989880},
{299901304, 892163356, 21021843},
{565637506, 795821687, 15830045},
{107336562, 781910357, 54488503},
{513281286, 916998022, 25426942},
{413431205, 611661371, 18899841},
{740163288, 938647312, 57138239},
{44702121, 296589002, 43470596},
{771733011, 919327188, 31763890},
{718860003, 815844769, 49514433},
{377975600, 438513404, 11108520},
{424965480, 928959619, 20776133},
{234986523, 732169039, 20595274},
{377078343, 981597420, 21926456},
{612269027, 791414524, 58017010},
{232336090, 616084008, 81392003},
{75059328, 274029861, 53524881},
{239121359, 646856043, 14134973},
{923193147, 943368157, 20671753},
{12565064, 536852817, 11557940},
{360225746, 970375527, 28488390},
{213705306, 380885426, 14495860},
{659446919, 699401237, 73837176},
{335372713, 785363124, 7610828},
{538388654, 859196325, 11028431},
{118558760, 713483972, 83950807},
{896959032, 961368580, 8848444},
{25543240, 521123082, 2472730},
{258530682, 935834352, 19473241},
{465248213, 679599042, 33456349},
{331230504, 637771661, 76778140},
{976340152, 988657462, 24395826},
{552994811, 922743535, 54013528},
{626831986, 839281366, 24222267},
{157704591, 253731033, 59023773},
{806377559, 859228114, 23804428},
{838798445, 996851254, 26845944},
{847646888, 928001503, 75519084},
{877625009, 999275937, 87412707},
{847949466, 893343194, 10497830},
{35029316, 784675240, 8200127},
{111807455, 690309882, 23190325},
{355765714, 554560093, 31156565},
{1890615, 614626804, 976253},
{132293206, 165429783, 65360680},
{506726160, 934170235, 45539429},
{210041918, 328800789, 15920336},
{499999999, 999999997, 2},
{499999999, 999999998, 2},
{999999999, 999999999, 1} };

            int[] expecteds = {122129406
,23525398
//,72975907
,405956028
,265162707
,91803604
,82636723
,9258153
,81152217
,31978708
,269539705
,18445097
,115810626
,117586280
,216062299
,55859471
,110226121
,674567416
,49690850
,200235842
,350805362
,28872987
,59090728
,13206454
,8773474
,425809870
,544652109
,119049822
,519193865
,422682546
,27074790
,262019564
,821934714
,588497214
,460522527
,385897437
,333906011
,14136713
,478754860
,145371959
,20243482
,93060069
,739548684
,54653973
,537798717
,332932745
,170016312
,755555371
,239799957
,24001866
,87501244
,202677879
,388484637
,85042925
,144704874
,387228584
,29703127
,27144750
,465233083
,592129096
,171623012
,99804791
,233162218
,69626951
,147046575
,467740
,27317429
,70841696
,226892541
,8113004
,174582190
,181675979
,113791493
,122228525
,431091984
,86082218
,73257991
,12731011
,96444034
,83666114
,52088792
,256275569
,356889192
,236671646
,155050214
,290894843
,426512254
,835545460
,118152992
,55891557
,22230414
,42655476
,154594318
,1153181
,98497256
,376112207
,67920321
,499999999
,1
,999999999};

            for (int i = 0; i < inputs.Length; i++)
            {
                int prisoners = inputs[i, 0];
                int pieceOfCandy = inputs[i, 1];
                int start = inputs[i, 2];

                var actual = new SaveThePrisoner().GetPersonToBeWarned(prisoners, pieceOfCandy, start);

                var expected = expecteds[i];

                Assert.AreEqual(expected, actual);
            }

        }
        
    }
}

  
